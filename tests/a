mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o array-lv/array-lv.o array-lv/array-lv.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o dimensions/simple_gv_bulk_2D_simple.o dimensions/simple_gv_bulk_2D_simple.cpp
In file included from dimensions/simple_gv_bulk_2D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_2D_simple.cpp:48:22: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({1,1},{2,2}) << data.data(); //inner cube is 2x2, 4 total
                     ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_2D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_2D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_2D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_2D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_2D_simple.cpp:53:22: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator>>' requested here
    win({1,1},{2,2}) >> nums;
                     ^
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_2D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_2D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_2D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
8 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o dimensions/simple_gv_bulk_3D_simple.o dimensions/simple_gv_bulk_3D_simple.cpp
In file included from dimensions/simple_gv_bulk_3D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_3D_simple.cpp:47:26: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({1,1,1},{2,2,2}) << data.data(); //inner cube is 2x2x2, 8 total
                         ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_3D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_3D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_3D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_3D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_3D_simple.cpp:52:26: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator>>' requested here
    win({1,1,1},{2,2,2}) >> nums;
                         ^
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_3D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_3D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_3D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
8 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o dimensions/simple_gv_bulk_3D_subarray.4.o dimensions/simple_gv_bulk_3D_subarray.4.cpp
In file included from dimensions/simple_gv_bulk_3D_subarray.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1809:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_3D_subarray.4.cpp:103:12: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
        }) << sub(local_buffer.data());
           ^
../include/rmacxx-global-view.hpp:1809:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_3D_subarray.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1809:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1809:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_3D_subarray.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1812:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1812:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_3D_subarray.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1812:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1812:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_3D_subarray.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_3D_subarray.4.cpp:112:12: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator>>' requested here
        }) >> nums;
           ^
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_3D_subarray.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_3D_subarray.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_3D_subarray.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
8 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o dimensions/simple_gv_bulk_4D_simple.o dimensions/simple_gv_bulk_4D_simple.cpp
In file included from dimensions/simple_gv_bulk_4D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_4D_simple.cpp:47:30: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({1,1,1,1},{2,2,2,2}) << data.data(); //inner cube is 2x2x2x2, 16 total
                             ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_4D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_4D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_4D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_4D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_4D_simple.cpp:52:30: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator>>' requested here
    win({1,1,1,1},{2,2,2,2}) >> nums;
                             ^
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_4D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_4D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_4D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
8 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o dimensions/simple_gv_bulk_5D_simple.o dimensions/simple_gv_bulk_5D_simple.cpp
In file included from dimensions/simple_gv_bulk_5D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_5D_simple.cpp:47:34: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({1,1,1,1,1},{2,2,2,2,2}) << data.data(); //inner cube is 2x2x2x2x2, 32 total
                                 ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_5D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_5D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_5D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_5D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_5D_simple.cpp:52:34: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator>>' requested here
    win({1,1,1,1,1},{2,2,2,2,2}) >> nums;
                                 ^
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_5D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_5D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_5D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
8 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o dimensions/simple_gv_bulk_6D_simple.o dimensions/simple_gv_bulk_6D_simple.cpp
In file included from dimensions/simple_gv_bulk_6D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_6D_simple.cpp:47:38: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({1,1,1,1,1,1},{2,2,2,2,2,2}) << data.data(); //inner cube is 2x2x2x2x2x2, 64 total
                                     ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_6D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_6D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_6D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_6D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_6D_simple.cpp:52:38: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator>>' requested here
    win({1,1,1,1,1,1},{2,2,2,2,2,2}) >> nums;
                                     ^
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_6D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_6D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_6D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
8 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o dimensions/simple_gv_bulk_7D_simple.o dimensions/simple_gv_bulk_7D_simple.cpp
In file included from dimensions/simple_gv_bulk_7D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_7D_simple.cpp:47:42: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({1,1,1,1,1,1,1},{2,2,2,2,2,2,2}) << data.data(); //inner cube is 2x2x2x2x2x2x2, 128 total
                                         ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_7D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_7D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_7D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_7D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_7D_simple.cpp:52:42: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator>>' requested here
    win({1,1,1,1,1,1,1},{2,2,2,2,2,2,2}) >> nums;
                                         ^
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_7D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_7D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_7D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
8 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o dimensions/simple_gv_bulk_8D_simple.o dimensions/simple_gv_bulk_8D_simple.cpp
In file included from dimensions/simple_gv_bulk_8D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_8D_simple.cpp:47:46: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({1,1,1,1,1,1,1,1},{2,2,2,2,2,2,2,2}) << data.data(); //inner cube is 2x2x2x2x2x2x2x2, 256 total
                                             ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_8D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_8D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_8D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_8D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_8D_simple.cpp:52:46: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator>>' requested here
    win({1,1,1,1,1,1,1,1},{2,2,2,2,2,2,2,2}) >> nums;
                                             ^
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_8D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_8D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_8D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
8 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o dimensions/simple_gv_bulk_9D_simple.o dimensions/simple_gv_bulk_9D_simple.cpp
In file included from dimensions/simple_gv_bulk_9D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_9D_simple.cpp:47:50: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({1,1,1,1,1,1,1,1,1},{2,2,2,2,2,2,2,2,2}) << data.data(); //inner cube is 2x2x2x2x2x2x2x2x2, 512 total
                                                 ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_9D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_9D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_9D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_9D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_9D_simple.cpp:52:50: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator>>' requested here
    win({1,1,1,1,1,1,1,1,1},{2,2,2,2,2,2,2,2,2}) >> nums;
                                                 ^
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_9D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_9D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_9D_simple.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
8 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o dimensions/simple_gv_bulk_9D_strided.4.o dimensions/simple_gv_bulk_9D_strided.4.cpp
In file included from dimensions/simple_gv_bulk_9D_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_9D_strided.4.cpp:90:50: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({0,0,0,0,0,0,0,0,0},{3,3,3,3,3,3,3,3,3}) << data.data();
                                                 ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_9D_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_9D_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_9D_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_9D_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_9D_strided.4.cpp:93:50: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator>>' requested here
    win({1,1,1,1,1,1,1,1,1},{2,2,2,2,2,2,2,2,2}) >> nums;
                                                 ^
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_9D_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_9D_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_9D_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
8 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o dimensions/simple_gv_bulk_9D_strided.o dimensions/simple_gv_bulk_9D_strided.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o dimensions/simple_gv_bulk_9D_subarray.4.o dimensions/simple_gv_bulk_9D_subarray.4.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o dimensions/simple_gv_bulk_9D_subarray_old.4.o dimensions/simple_gv_bulk_9D_subarray_old.4.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o dimensions/simple_gv_bulk_experimentation.4.o dimensions/simple_gv_bulk_experimentation.4.cpp
In file included from dimensions/simple_gv_bulk_experimentation.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1809:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_experimentation.4.cpp:208:26: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({0,0,1},{2,5,7}) << sub(data.data()); //put the 2-wide hypercube subarray into the center of the 4-wide hypercube
                         ^
../include/rmacxx-global-view.hpp:1809:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_experimentation.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1809:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1809:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_experimentation.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1812:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1812:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_experimentation.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1812:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1812:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_experimentation.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_experimentation.4.cpp:213:26: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator>>' requested here
    win({0,0,1},{2,5,7}) >> nums;
                         ^
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_experimentation.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_experimentation.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_experimentation.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
8 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o dimensions/simple_gv_bulk_nD_strided.4.o dimensions/simple_gv_bulk_nD_strided.4.cpp
In file included from dimensions/simple_gv_bulk_nD_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1809:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
dimensions/simple_gv_bulk_nD_strided.4.cpp:96:22: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({2,3},{6,5}) << sub(data.data()); //5x3 = 15
                     ^
../include/rmacxx-global-view.hpp:1809:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_nD_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1809:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1809:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_nD_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1812:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1812:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from dimensions/simple_gv_bulk_nD_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1812:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1812:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
4 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-bulk/acc.o expr-bulk/acc.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-bulk/expr-bulk-large.o expr-bulk/expr-bulk-large.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-bulk/expr-bulk-rhswin-blocking.o expr-bulk/expr-bulk-rhswin-blocking.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-bulk/expr-bulk-rhswin-large.o expr-bulk/expr-bulk-rhswin-large.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-bulk/expr-bulk-rhswin.o expr-bulk/expr-bulk-rhswin.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-bulk/expr-bulk.o expr-bulk/expr-bulk.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-bulk/expr-bulk2.o expr-bulk/expr-bulk2.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/dummy-test-gv.4.o expr-elem/dummy-test-gv.4.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/dummy-test-lv.o expr-elem/dummy-test-lv.cpp
expr-elem/dummy-test-lv.cpp:14:6: warning: unused variable 'num1' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
            ^
expr-elem/dummy-test-lv.cpp:14:12: warning: unused variable 'num2' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                  ^
expr-elem/dummy-test-lv.cpp:14:18: warning: unused variable 'num3' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                        ^
expr-elem/dummy-test-lv.cpp:14:24: warning: unused variable 'num4' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                              ^
expr-elem/dummy-test-lv.cpp:14:30: warning: unused variable 'num5' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                                    ^
5 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/dummy-test-thicc.o expr-elem/dummy-test-thicc.cpp
expr-elem/dummy-test-thicc.cpp:12:6: warning: unused variable 'num1' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
            ^
expr-elem/dummy-test-thicc.cpp:12:12: warning: unused variable 'num2' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                  ^
expr-elem/dummy-test-thicc.cpp:12:18: warning: unused variable 'num3' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                        ^
expr-elem/dummy-test-thicc.cpp:12:24: warning: unused variable 'num4' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                              ^
expr-elem/dummy-test-thicc.cpp:12:30: warning: unused variable 'num5' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                                    ^
5 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/dummy-test.o expr-elem/dummy-test.cpp
expr-elem/dummy-test.cpp:11:6: warning: unused variable 'num1' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
            ^
expr-elem/dummy-test.cpp:11:12: warning: unused variable 'num2' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                  ^
expr-elem/dummy-test.cpp:11:18: warning: unused variable 'num3' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                        ^
expr-elem/dummy-test.cpp:11:24: warning: unused variable 'num4' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                              ^
expr-elem/dummy-test.cpp:11:30: warning: unused variable 'num5' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                                    ^
5 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/expr-elem-gencomp.o expr-elem/expr-elem-gencomp.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/expr-elem-large-rhswin.o expr-elem/expr-elem-large-rhswin.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/expr-elem-large.o expr-elem/expr-elem-large.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/expr-elem-rhswin-blocking.o expr-elem/expr-elem-rhswin-blocking.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/expr-elem-rhswin.o expr-elem/expr-elem-rhswin.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/expr-elem-rhswin2.o expr-elem/expr-elem-rhswin2.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/expr-elem.o expr-elem/expr-elem.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/expr-elem2.o expr-elem/expr-elem2.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/expr-elem3.o expr-elem/expr-elem3.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/expr-elem4.o expr-elem/expr-elem4.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/expr-rhswin.o expr-elem/expr-rhswin.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/failure-test.o expr-elem/failure-test.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o expr-elem/nc-put.o expr-elem/nc-put.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o functions/gaps.o functions/gaps.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o general/failure-test-contig.o general/failure-test-contig.cpp
general/failure-test-contig.cpp:11:6: warning: unused variable 'num1' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
            ^
general/failure-test-contig.cpp:11:12: warning: unused variable 'num2' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                  ^
general/failure-test-contig.cpp:11:18: warning: unused variable 'num3' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                        ^
general/failure-test-contig.cpp:11:24: warning: unused variable 'num4' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                              ^
general/failure-test-contig.cpp:11:30: warning: unused variable 'num5' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                                    ^
5 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o general/failure-test-gaps-2D.5.o general/failure-test-gaps-2D.5.cpp
general/failure-test-gaps-2D.5.cpp:1:9: warning: 'DEBUG_CHECK_GAPS' macro redefined [-Wmacro-redefined]
#define DEBUG_CHECK_GAPS
        ^
<command line>:3:9: note: previous definition is here
#define DEBUG_CHECK_GAPS 1
        ^
1 warning generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o general/failure-test-gaps-3D.5.o general/failure-test-gaps-3D.5.cpp
general/failure-test-gaps-3D.5.cpp:1:9: warning: 'DEBUG_CHECK_GAPS' macro redefined [-Wmacro-redefined]
#define DEBUG_CHECK_GAPS
        ^
<command line>:3:9: note: previous definition is here
#define DEBUG_CHECK_GAPS 1
        ^
1 warning generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o general/failure-test-gaps-9D.7.o general/failure-test-gaps-9D.7.cpp
general/failure-test-gaps-9D.7.cpp:1:9: warning: 'DEBUG_CHECK_GAPS' macro redefined [-Wmacro-redefined]
#define DEBUG_CHECK_GAPS
        ^
<command line>:3:9: note: previous definition is here
#define DEBUG_CHECK_GAPS 1
        ^
1 warning generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o general/failure-test-positive.o general/failure-test-positive.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o general/irregular-gv.4.o general/irregular-gv.4.cpp
In file included from general/irregular-gv.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
general/irregular-gv.4.cpp:44:30: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
        win({2,4,1},{5,5,8}) << buff.data();
                             ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from general/irregular-gv.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from general/irregular-gv.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from general/irregular-gv.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from general/irregular-gv.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
general/irregular-gv.4.cpp:66:26: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator>>' requested here
    win({2,4,1},{7,8,8}) >> nums;
                         ^
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from general/irregular-gv.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1742:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1742:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from general/irregular-gv.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from general/irregular-gv.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1746:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1746:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_GET_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
8 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o general/irregular-lv.4.o general/irregular-lv.4.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o general/simple-big-lv.24.o general/simple-big-lv.24.cpp
general/simple-big-lv.24.cpp:12:6: warning: unused variable 'num1' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
            ^
general/simple-big-lv.24.cpp:12:12: warning: unused variable 'num2' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                  ^
general/simple-big-lv.24.cpp:12:18: warning: unused variable 'num3' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                        ^
general/simple-big-lv.24.cpp:12:24: warning: unused variable 'num4' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                              ^
general/simple-big-lv.24.cpp:12:30: warning: unused variable 'num5' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                                    ^
5 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o general/simple-lv.4.o general/simple-lv.4.cpp
general/simple-lv.4.cpp:11:6: warning: unused variable 'num1' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
            ^
general/simple-lv.4.cpp:11:12: warning: unused variable 'num2' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                  ^
general/simple-lv.4.cpp:11:18: warning: unused variable 'num3' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                        ^
general/simple-lv.4.cpp:11:24: warning: unused variable 'num4' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                              ^
general/simple-lv.4.cpp:11:30: warning: unused variable 'num5' [-Wunused-variable]
        int num1, num2, num3, num4, num5;
                                    ^
5 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o simple-gv/simple_gv_bulk.o simple-gv/simple_gv_bulk.cpp
In file included from simple-gv/simple_gv_bulk.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
simple-gv/simple_gv_bulk.cpp:46:18: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({4},{8}) << vals.data();
                 ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
4 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o simple-gv/simple_gv_bulk_1D.4.o simple-gv/simple_gv_bulk_1D.4.cpp
In file included from simple-gv/simple_gv_bulk_1D.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
simple-gv/simple_gv_bulk_1D.4.cpp:57:19: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({3},{13}) << data.data();
                  ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_1D.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_1D.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_1D.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
4 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o simple-gv/simple_gv_bulk_1D_strided.4.o simple-gv/simple_gv_bulk_1D_strided.4.cpp
In file included from simple-gv/simple_gv_bulk_1D_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1809:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
simple-gv/simple_gv_bulk_1D_strided.4.cpp:58:19: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({3},{13}) << rmx_vt(data.data());
                  ^
../include/rmacxx-global-view.hpp:1809:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_1D_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1809:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1809:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_1D_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1812:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1812:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_1D_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1812:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1812:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
4 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o simple-gv/simple_gv_bulk_nD.4.o simple-gv/simple_gv_bulk_nD.4.cpp
In file included from simple-gv/simple_gv_bulk_nD.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
simple-gv/simple_gv_bulk_nD.4.cpp:59:22: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({0,0},{4,6}) << data.data();
                     ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
4 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o simple-gv/simple_gv_bulk_nD_2.4.o simple-gv/simple_gv_bulk_nD_2.4.cpp
In file included from simple-gv/simple_gv_bulk_nD_2.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
simple-gv/simple_gv_bulk_nD_2.4.cpp:60:23: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({5,5},{8,35}) << data.data();
                      ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD_2.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD_2.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD_2.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
4 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o simple-gv/simple_gv_bulk_nD_3.o simple-gv/simple_gv_bulk_nD_3.cpp
In file included from simple-gv/simple_gv_bulk_nD_3.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
simple-gv/simple_gv_bulk_nD_3.cpp:35:22: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({0,0},{1,4}) << data.data();
                     ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD_3.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD_3.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD_3.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
4 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o simple-gv/simple_gv_bulk_nD_4.4.o simple-gv/simple_gv_bulk_nD_4.4.cpp
In file included from simple-gv/simple_gv_bulk_nD_4.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
simple-gv/simple_gv_bulk_nD_4.4.cpp:60:22: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({1,3},{6,8}) << data.data();
                     ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD_4.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD_4.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD_4.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
4 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o simple-gv/simple_gv_bulk_nD_5.4.o simple-gv/simple_gv_bulk_nD_5.4.cpp
In file included from simple-gv/simple_gv_bulk_nD_5.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
simple-gv/simple_gv_bulk_nD_5.4.cpp:60:22: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({1,1},{6,6}) << data.data();
                     ^
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD_5.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1719:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1719:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD_5.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:675:71: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD_5.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1722:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1722:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_CONTIG_BULK_XFER(origin_addr, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:682:84: note: expanded from macro 'RMACXX_GLOBAL_CONTIG_BULK_XFER'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
4 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o simple-gv/simple_gv_bulk_nD_cart.4.o simple-gv/simple_gv_bulk_nD_cart.4.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o simple-gv/simple_gv_bulk_nD_simple.o simple-gv/simple_gv_bulk_nD_simple.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o simple-gv/simple_gv_bulk_nD_strided.4.o simple-gv/simple_gv_bulk_nD_strided.4.cpp
In file included from simple-gv/simple_gv_bulk_nD_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1809:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
simple-gv/simple_gv_bulk_nD_strided.4.cpp:86:22: note: in instantiation of member function 'rmacxx::Window<int, GLOBAL_VIEW, NO_EXPR, NO_FLUSH, ATOMIC_NONE, NOT_CONCURRENT>::operator<<' requested here
    win({2,3},{6,5}) << sub(data.data());
                     ^
../include/rmacxx-global-view.hpp:1809:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1809:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1809:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_PUT_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1812:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                             ~~~~~~~~~~~~~                     ~~~~~~~^~~~~~
../include/rmacxx-global-view.hpp:1812:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:776:71: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                if ( memcmp( new_hi.data(), hi_.data(), sizeof(new_hi.data()) ) == 0 ) \
                                                               ~~~~~~~^~~~~~
In file included from simple-gv/simple_gv_bulk_nD_strided.4.cpp:1:
In file included from ../include/rmacxx.hpp:326:
../include/rmacxx-global-view.hpp:1812:13: warning: 'memcmp' call operates on objects of type 'std::vector<int>::value_type' (aka 'int') while the size is based on a different type 'std::vector<int>::value_type *' (aka 'int *') [-Wsizeof-pointer-memaccess]
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                 ~~~~~~~~~~                                    ~~~~^~~~~~
../include/rmacxx-global-view.hpp:1812:13: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
            RMACXX_GLOBAL_BULK_XFER_NC(origin, RMACXX_BULK_ACC_GLOBAL);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/rmacxx-mpi-rma.hpp:783:84: note: expanded from macro 'RMACXX_GLOBAL_BULK_XFER_NC'
                    if ( memcmp( hi_.data(), &rlo_[next_target*ndims_], sizeof(hi_.data()) ) >= 0 ) \
                                                                               ~~~~^~~~~~
4 warnings generated.
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o simple-gv/simple_gv_elem.o simple-gv/simple_gv_elem.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o futures/bulk/expr_from_func.o futures/bulk/expr_from_func.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o futures/bulk/flushed_window_from_func.o futures/bulk/flushed_window_from_func.cpp
mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o futures/bulk/unflushed_window_from_func.o futures/bulk/unflushed_window_from_func.cpp
