mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS   -c -o futures/bulk/flushed_window_from_func.o futures/bulk/flushed_window_from_func.cpp
echo "::group::futures/bulk/flushed_window_from_func.test"
::group::futures/bulk/flushed_window_from_func.test
(mpic++ -O3 -Wall -std=c++20 -pthread -I../include -D_GNU_SOURCE -DTEST_OVERHEAD -DDEBUG_CHECK_GAPS futures/bulk/flushed_window_from_func.o -o futures/bulk/flushed_window_from_func.test ||(echo "::endgroup::"; exit 2));
(mpiexec -np 2 ./futures/bulk/flushed_window_from_func.test||(echo "::endgroup::";exit 2));
1 windows are blocking expr 0
2 windows are blocking expr 0
1 windows are blocking expr 0
2 windows are blocking expr 0
1 windows are blocking expr 1
2 windows are blocking expr 1
1 windows are blocking expr 1
2 windows are blocking expr 1
1 windows are blocking expr 2
2 windows are blocking expr 2
1 windows are blocking expr 2
2 windows are blocking expr 2
1 windows are blocking expr 3
2 windows are blocking expr 3
Unblocking expression 01 windows are blocking expr 3
2 windows are blocking expr 3
Unblocking expression 0(2(2 currently blocking)[Is Alive]
Future 0 is now waiting on: [1]
 currently blocking)[Is Alive]
Future 0 is now waiting on: [1]
Unblocking expression 1(Unblocking expression 1(2 currently blocking)[Is Alive]
Future 1 is now waiting on: [1]2 currently blocking)[Is Alive]
Future 1 is now waiting on: [1]
Unblocking expression 2
Unblocking expression 2(2 currently blocking)[Is Alive]
Future 2 is now waiting on: [(2 currently blocking)[Is Alive]
Future 2 is now waiting on: [1]
Unblocking expression 1]
Unblocking expression 3(2 currently blocking)[Is Alive]
Future 3(2 currently blocking)[Is Alive]
Future 3 is now waiting on: [1]
3 is now waiting on: [1]
Unblocking expression 0(1 currently blocking)[Unblocking expression 0(1 currently blocking)[Is Alive]
Future 0 is now waiting on: [Is Alive]
Future 0 is now waiting on: [0]
filled_into_win(This should probs only happen once?)
0]
filled_into_win(This should probs only happen once?)
filled_into_win(This should probs only happen once?)
Complete! filled_into_win(This should probs only happen once?)
Complete! 22
BeginScalar! Pre:2
CompleteScalar! Post:2
BeginScalar! Pre:2
CompleteScalar! Post:2
BulkRhsWin: 2
BulkRhsWin: 2

Completed expr 0
Unblocking expression 1Completed expr 0
Unblocking expression 1(1 currently blocking)[Is Alive](1 currently blocking)[Is Alive]
Future 1 is now waiting on: [0]

Future 1 is now waiting on: [0]
filled_into_win(This should probs only happen once?)
filled_into_win(This should probs only happen once?)filled_into_win(This should probs only happen once?)
filled_into_win(This should probs only happen once?)
Complete! 2
BeginScalar! Pre:2

Complete! 2
BeginScalar! Pre:2
CompleteScalar! Post:4
BulkRhsWin: 4
CompleteScalar! Post:4
BulkRhsWin: 4
Completed expr 1
Unblocking expression 2(1Completed expr 1
Unblocking expression 2(1 currently blocking)[Is Alive] currently blocking)[Is Alive]
Future 2 is now waiting on: [0]
filled_into_win(This should probs only happen once?)

Future 2 is now waiting on: [0]
filled_into_win(This should probs only happen once?)
filled_into_win(This should probs only happen once?)
Complete! filled_into_win(This should probs only happen once?)
Complete! 2
BeginScalar! Pre:2
CompleteScalar! Post:62
BeginScalar! Pre:2
CompleteScalar! Post:6
BulkRhsWin: 6
BulkRhsWin: 6
Completed expr 2
Completed expr 2
Unblocking expression 3
Unblocking expression 3(1 currently blocking)[Is Alive]
Future 3 is now waiting on: [0](1 currently blocking)[Is Alive]
Future 3 is now waiting on: [0]
filled_into_win(This should probs only happen once?)
filled_into_win(This should probs only happen once?)
filled_into_win(This should probs only happen once?)
Complete! 2
BeginScalar! Pre:2

filled_into_win(This should probs only happen once?)
Complete! 2
BeginScalar! Pre:2
CompleteScalar! Post:8
BulkRhsWin: 8
CompleteScalar! Post:8
BulkRhsWin: 8
Completed expr 3
Completed expr 3
1 windows are blocking expr 4
1 windows are blocking expr 5
1 windows are blocking expr 6
1 windows are blocking expr 4
1 windows are blocking expr 7
Unblocking expression 41 windows are blocking expr 5
1 windows are blocking expr 6(1 currently blocking)[Is Alive]
Future 4 is now waiting on: [0
]
filled_into_win(This should probs only happen once?)
Bulk: 2
Completed expr 41 windows are blocking expr 7
Unblocking expression 4(1 currently blocking)[Is Alive]

Unblocking expression 5(1 currently blocking)[Is Alive]
Future 5 is now waiting on: [0Future 4 is now waiting on: [0]
filled_into_win(This should probs only happen once?)
Bulk: 2]
filled_into_win(This should probs only happen once?)
Bulk: 4
Completed expr 5
Unblocking expression 
Completed expr 4
Unblocking expression 5(1 currently blocking)[Is Alive]6(1 currently blocking)[Is Alive]
Future 6 is now waiting on: [0]
filled_into_win(This should probs only happen once?)

Future 5 is now waiting on: [0]
filled_into_win(This should probs only happen once?)
Bulk: 4
Completed expr 5
Bulk: 6
Completed expr 6
Unblocking expression 7(1 currently blocking)[Unblocking expression 6(1 currently blocking)[Is Alive]
Future Is Alive]
Future 7 is now waiting on: [0]
filled_into_win(This should probs only happen once?)
Bulk: 6 is now waiting on: [0]
filled_into_win(This should probs only happen once?)
Bulk: 6
8
Completed expr 7
Completed expr 6
Unblocking expression 7(1 currently blocking)[Is Alive]
Future 7 is now waiting on: [0]
filled_into_win(This should probs only happen once?)
Bulk: 8
Completed expr 7
Expression results: 
--------------------
2 2 2 2 2 
2 2 2 2 2 
2 2 2 2 2 
2 2 2 2 2 
2 2 2 2 2 
--------------------
4 4 4 4 4 
4 4 4 4 4 
4 4 4 4 4 
4 4 4 4 4 
4 4 4 4 4 
--------------------
6 6 6 6 6 
6 6 6 6 6 
6 6 6 6 6 
6 6 6 6 6 
6 6 6 6 6 
--------------------
8 8 8 8 8 
8 8 8 8 8 
8 8 8 8 8 
8 8 8 8 8 
8 8 8 8 8 
Validation PASSED.
echo "::endgroup::"
::endgroup::
rm futures/bulk/flushed_window_from_func.o
